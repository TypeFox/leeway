// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: reporter.proto

package remotereporter

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PackageStatus int32

const (
	PackageStatus_Unknown  PackageStatus = 0
	PackageStatus_NotBuilt PackageStatus = 1
	PackageStatus_Building PackageStatus = 2
	PackageStatus_Built    PackageStatus = 3
)

// Enum value maps for PackageStatus.
var (
	PackageStatus_name = map[int32]string{
		0: "Unknown",
		1: "NotBuilt",
		2: "Building",
		3: "Built",
	}
	PackageStatus_value = map[string]int32{
		"Unknown":  0,
		"NotBuilt": 1,
		"Building": 2,
		"Built":    3,
	}
)

func (x PackageStatus) Enum() *PackageStatus {
	p := new(PackageStatus)
	*p = x
	return p
}

func (x PackageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_reporter_proto_enumTypes[0].Descriptor()
}

func (PackageStatus) Type() protoreflect.EnumType {
	return &file_reporter_proto_enumTypes[0]
}

func (x PackageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackageStatus.Descriptor instead.
func (PackageStatus) EnumDescriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{0}
}

type BuildStartedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock   int32    `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Package *Package `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
}

func (x *BuildStartedEvent) Reset() {
	*x = BuildStartedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildStartedEvent) ProtoMessage() {}

func (x *BuildStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_reporter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildStartedEvent.ProtoReflect.Descriptor instead.
func (*BuildStartedEvent) Descriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{0}
}

func (x *BuildStartedEvent) GetClock() int32 {
	if x != nil {
		return x.Clock
	}
	return 0
}

func (x *BuildStartedEvent) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

type BuildStartedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session string `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *BuildStartedResponse) Reset() {
	*x = BuildStartedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildStartedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildStartedResponse) ProtoMessage() {}

func (x *BuildStartedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reporter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildStartedResponse.ProtoReflect.Descriptor instead.
func (*BuildStartedResponse) Descriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{1}
}

func (x *BuildStartedResponse) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

type PackageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullname string `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Version  string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *PackageMetadata) Reset() {
	*x = PackageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageMetadata) ProtoMessage() {}

func (x *PackageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_reporter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageMetadata.ProtoReflect.Descriptor instead.
func (*PackageMetadata) Descriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{2}
}

func (x *PackageMetadata) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *PackageMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata     *PackageMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Dependencies []*Package       `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Status       PackageStatus    `protobuf:"varint,3,opt,name=status,proto3,enum=remotereporter.PackageStatus" json:"status,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_reporter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{3}
}

func (x *Package) GetMetadata() *PackageMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Package) GetDependencies() []*Package {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *Package) GetStatus() PackageStatus {
	if x != nil {
		return x.Status
	}
	return PackageStatus_Unknown
}

type BuildFinishedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock      int32            `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Session    string           `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	Package    *PackageMetadata `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`
	Successful bool             `protobuf:"varint,4,opt,name=successful,proto3" json:"successful,omitempty"`
	Message    string           `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BuildFinishedEvent) Reset() {
	*x = BuildFinishedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildFinishedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildFinishedEvent) ProtoMessage() {}

func (x *BuildFinishedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_reporter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildFinishedEvent.ProtoReflect.Descriptor instead.
func (*BuildFinishedEvent) Descriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{4}
}

func (x *BuildFinishedEvent) GetClock() int32 {
	if x != nil {
		return x.Clock
	}
	return 0
}

func (x *BuildFinishedEvent) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *BuildFinishedEvent) GetPackage() *PackageMetadata {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *BuildFinishedEvent) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *BuildFinishedEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PackageBuildStartedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock   int32            `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Session string           `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	Package *PackageMetadata `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`
}

func (x *PackageBuildStartedEvent) Reset() {
	*x = PackageBuildStartedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageBuildStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageBuildStartedEvent) ProtoMessage() {}

func (x *PackageBuildStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_reporter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageBuildStartedEvent.ProtoReflect.Descriptor instead.
func (*PackageBuildStartedEvent) Descriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{5}
}

func (x *PackageBuildStartedEvent) GetClock() int32 {
	if x != nil {
		return x.Clock
	}
	return 0
}

func (x *PackageBuildStartedEvent) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *PackageBuildStartedEvent) GetPackage() *PackageMetadata {
	if x != nil {
		return x.Package
	}
	return nil
}

type PackageBuildLogEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock   int32            `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Session string           `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	Package *PackageMetadata `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`
	Data    []byte           `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PackageBuildLogEvent) Reset() {
	*x = PackageBuildLogEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageBuildLogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageBuildLogEvent) ProtoMessage() {}

func (x *PackageBuildLogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_reporter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageBuildLogEvent.ProtoReflect.Descriptor instead.
func (*PackageBuildLogEvent) Descriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{6}
}

func (x *PackageBuildLogEvent) GetClock() int32 {
	if x != nil {
		return x.Clock
	}
	return 0
}

func (x *PackageBuildLogEvent) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *PackageBuildLogEvent) GetPackage() *PackageMetadata {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *PackageBuildLogEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PackageBuildFinishedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock                int32            `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Session              string           `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	Package              *PackageMetadata `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty"`
	Successful           bool             `protobuf:"varint,4,opt,name=successful,proto3" json:"successful,omitempty"`
	Message              string           `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	DurationMilliseconds int64            `protobuf:"varint,6,opt,name=duration_milliseconds,json=durationMilliseconds,proto3" json:"duration_milliseconds,omitempty"`
}

func (x *PackageBuildFinishedEvent) Reset() {
	*x = PackageBuildFinishedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackageBuildFinishedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageBuildFinishedEvent) ProtoMessage() {}

func (x *PackageBuildFinishedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_reporter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageBuildFinishedEvent.ProtoReflect.Descriptor instead.
func (*PackageBuildFinishedEvent) Descriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{7}
}

func (x *PackageBuildFinishedEvent) GetClock() int32 {
	if x != nil {
		return x.Clock
	}
	return 0
}

func (x *PackageBuildFinishedEvent) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *PackageBuildFinishedEvent) GetPackage() *PackageMetadata {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *PackageBuildFinishedEvent) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *PackageBuildFinishedEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PackageBuildFinishedEvent) GetDurationMilliseconds() int64 {
	if x != nil {
		return x.DurationMilliseconds
	}
	return 0
}

type NoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoResponse) Reset() {
	*x = NoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reporter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoResponse) ProtoMessage() {}

func (x *NoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reporter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoResponse.ProtoReflect.Descriptor instead.
func (*NoResponse) Descriptor() ([]byte, []int) {
	return file_reporter_proto_rawDescGZIP(), []int{8}
}

var File_reporter_proto protoreflect.FileDescriptor

var file_reporter_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x22, 0x5c, 0x0a, 0x11, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x07, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x30,
	0x0a, 0x14, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x47, 0x0a, 0x0f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x07, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x12, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x18, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x39, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x14, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xf5, 0x01, 0x0a, 0x19, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x72, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x0c, 0x0a, 0x0a, 0x4e, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x43, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x42, 0x75, 0x69,
	0x6c, 0x74, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x10, 0x03, 0x32, 0xd1, 0x03,
	0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x12, 0x59, 0x0a, 0x0c, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x24, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x13, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12,
	0x28, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0f, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x5f, 0x0a, 0x14, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x29, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x66, 0x6f, 0x78, 0x2f, 0x6c, 0x65, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_reporter_proto_rawDescOnce sync.Once
	file_reporter_proto_rawDescData = file_reporter_proto_rawDesc
)

func file_reporter_proto_rawDescGZIP() []byte {
	file_reporter_proto_rawDescOnce.Do(func() {
		file_reporter_proto_rawDescData = protoimpl.X.CompressGZIP(file_reporter_proto_rawDescData)
	})
	return file_reporter_proto_rawDescData
}

var file_reporter_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_reporter_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_reporter_proto_goTypes = []interface{}{
	(PackageStatus)(0),                // 0: remotereporter.PackageStatus
	(*BuildStartedEvent)(nil),         // 1: remotereporter.BuildStartedEvent
	(*BuildStartedResponse)(nil),      // 2: remotereporter.BuildStartedResponse
	(*PackageMetadata)(nil),           // 3: remotereporter.PackageMetadata
	(*Package)(nil),                   // 4: remotereporter.Package
	(*BuildFinishedEvent)(nil),        // 5: remotereporter.BuildFinishedEvent
	(*PackageBuildStartedEvent)(nil),  // 6: remotereporter.PackageBuildStartedEvent
	(*PackageBuildLogEvent)(nil),      // 7: remotereporter.PackageBuildLogEvent
	(*PackageBuildFinishedEvent)(nil), // 8: remotereporter.PackageBuildFinishedEvent
	(*NoResponse)(nil),                // 9: remotereporter.NoResponse
}
var file_reporter_proto_depIdxs = []int32{
	4,  // 0: remotereporter.BuildStartedEvent.package:type_name -> remotereporter.Package
	3,  // 1: remotereporter.Package.metadata:type_name -> remotereporter.PackageMetadata
	4,  // 2: remotereporter.Package.dependencies:type_name -> remotereporter.Package
	0,  // 3: remotereporter.Package.status:type_name -> remotereporter.PackageStatus
	3,  // 4: remotereporter.BuildFinishedEvent.package:type_name -> remotereporter.PackageMetadata
	3,  // 5: remotereporter.PackageBuildStartedEvent.package:type_name -> remotereporter.PackageMetadata
	3,  // 6: remotereporter.PackageBuildLogEvent.package:type_name -> remotereporter.PackageMetadata
	3,  // 7: remotereporter.PackageBuildFinishedEvent.package:type_name -> remotereporter.PackageMetadata
	1,  // 8: remotereporter.Reporter.BuildStarted:input_type -> remotereporter.BuildStartedEvent
	5,  // 9: remotereporter.Reporter.BuildFinished:input_type -> remotereporter.BuildFinishedEvent
	6,  // 10: remotereporter.Reporter.PackageBuildStarted:input_type -> remotereporter.PackageBuildStartedEvent
	7,  // 11: remotereporter.Reporter.PackageBuildLog:input_type -> remotereporter.PackageBuildLogEvent
	8,  // 12: remotereporter.Reporter.PackageBuildFinished:input_type -> remotereporter.PackageBuildFinishedEvent
	2,  // 13: remotereporter.Reporter.BuildStarted:output_type -> remotereporter.BuildStartedResponse
	9,  // 14: remotereporter.Reporter.BuildFinished:output_type -> remotereporter.NoResponse
	9,  // 15: remotereporter.Reporter.PackageBuildStarted:output_type -> remotereporter.NoResponse
	9,  // 16: remotereporter.Reporter.PackageBuildLog:output_type -> remotereporter.NoResponse
	9,  // 17: remotereporter.Reporter.PackageBuildFinished:output_type -> remotereporter.NoResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_reporter_proto_init() }
func file_reporter_proto_init() {
	if File_reporter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_reporter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildStartedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildStartedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildFinishedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageBuildStartedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageBuildLogEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackageBuildFinishedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reporter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reporter_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reporter_proto_goTypes,
		DependencyIndexes: file_reporter_proto_depIdxs,
		EnumInfos:         file_reporter_proto_enumTypes,
		MessageInfos:      file_reporter_proto_msgTypes,
	}.Build()
	File_reporter_proto = out.File
	file_reporter_proto_rawDesc = nil
	file_reporter_proto_goTypes = nil
	file_reporter_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReporterClient is the client API for Reporter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReporterClient interface {
	BuildStarted(ctx context.Context, in *BuildStartedEvent, opts ...grpc.CallOption) (*BuildStartedResponse, error)
	BuildFinished(ctx context.Context, in *BuildFinishedEvent, opts ...grpc.CallOption) (*NoResponse, error)
	PackageBuildStarted(ctx context.Context, in *PackageBuildStartedEvent, opts ...grpc.CallOption) (*NoResponse, error)
	PackageBuildLog(ctx context.Context, opts ...grpc.CallOption) (Reporter_PackageBuildLogClient, error)
	PackageBuildFinished(ctx context.Context, in *PackageBuildFinishedEvent, opts ...grpc.CallOption) (*NoResponse, error)
}

type reporterClient struct {
	cc grpc.ClientConnInterface
}

func NewReporterClient(cc grpc.ClientConnInterface) ReporterClient {
	return &reporterClient{cc}
}

func (c *reporterClient) BuildStarted(ctx context.Context, in *BuildStartedEvent, opts ...grpc.CallOption) (*BuildStartedResponse, error) {
	out := new(BuildStartedResponse)
	err := c.cc.Invoke(ctx, "/remotereporter.Reporter/BuildStarted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reporterClient) BuildFinished(ctx context.Context, in *BuildFinishedEvent, opts ...grpc.CallOption) (*NoResponse, error) {
	out := new(NoResponse)
	err := c.cc.Invoke(ctx, "/remotereporter.Reporter/BuildFinished", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reporterClient) PackageBuildStarted(ctx context.Context, in *PackageBuildStartedEvent, opts ...grpc.CallOption) (*NoResponse, error) {
	out := new(NoResponse)
	err := c.cc.Invoke(ctx, "/remotereporter.Reporter/PackageBuildStarted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reporterClient) PackageBuildLog(ctx context.Context, opts ...grpc.CallOption) (Reporter_PackageBuildLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Reporter_serviceDesc.Streams[0], "/remotereporter.Reporter/PackageBuildLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &reporterPackageBuildLogClient{stream}
	return x, nil
}

type Reporter_PackageBuildLogClient interface {
	Send(*PackageBuildLogEvent) error
	CloseAndRecv() (*NoResponse, error)
	grpc.ClientStream
}

type reporterPackageBuildLogClient struct {
	grpc.ClientStream
}

func (x *reporterPackageBuildLogClient) Send(m *PackageBuildLogEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *reporterPackageBuildLogClient) CloseAndRecv() (*NoResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(NoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *reporterClient) PackageBuildFinished(ctx context.Context, in *PackageBuildFinishedEvent, opts ...grpc.CallOption) (*NoResponse, error) {
	out := new(NoResponse)
	err := c.cc.Invoke(ctx, "/remotereporter.Reporter/PackageBuildFinished", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReporterServer is the server API for Reporter service.
type ReporterServer interface {
	BuildStarted(context.Context, *BuildStartedEvent) (*BuildStartedResponse, error)
	BuildFinished(context.Context, *BuildFinishedEvent) (*NoResponse, error)
	PackageBuildStarted(context.Context, *PackageBuildStartedEvent) (*NoResponse, error)
	PackageBuildLog(Reporter_PackageBuildLogServer) error
	PackageBuildFinished(context.Context, *PackageBuildFinishedEvent) (*NoResponse, error)
}

// UnimplementedReporterServer can be embedded to have forward compatible implementations.
type UnimplementedReporterServer struct {
}

func (*UnimplementedReporterServer) BuildStarted(context.Context, *BuildStartedEvent) (*BuildStartedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildStarted not implemented")
}
func (*UnimplementedReporterServer) BuildFinished(context.Context, *BuildFinishedEvent) (*NoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildFinished not implemented")
}
func (*UnimplementedReporterServer) PackageBuildStarted(context.Context, *PackageBuildStartedEvent) (*NoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PackageBuildStarted not implemented")
}
func (*UnimplementedReporterServer) PackageBuildLog(Reporter_PackageBuildLogServer) error {
	return status.Errorf(codes.Unimplemented, "method PackageBuildLog not implemented")
}
func (*UnimplementedReporterServer) PackageBuildFinished(context.Context, *PackageBuildFinishedEvent) (*NoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PackageBuildFinished not implemented")
}

func RegisterReporterServer(s *grpc.Server, srv ReporterServer) {
	s.RegisterService(&_Reporter_serviceDesc, srv)
}

func _Reporter_BuildStarted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildStartedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).BuildStarted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotereporter.Reporter/BuildStarted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).BuildStarted(ctx, req.(*BuildStartedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reporter_BuildFinished_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildFinishedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).BuildFinished(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotereporter.Reporter/BuildFinished",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).BuildFinished(ctx, req.(*BuildFinishedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reporter_PackageBuildStarted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageBuildStartedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).PackageBuildStarted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotereporter.Reporter/PackageBuildStarted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).PackageBuildStarted(ctx, req.(*PackageBuildStartedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reporter_PackageBuildLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ReporterServer).PackageBuildLog(&reporterPackageBuildLogServer{stream})
}

type Reporter_PackageBuildLogServer interface {
	SendAndClose(*NoResponse) error
	Recv() (*PackageBuildLogEvent, error)
	grpc.ServerStream
}

type reporterPackageBuildLogServer struct {
	grpc.ServerStream
}

func (x *reporterPackageBuildLogServer) SendAndClose(m *NoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *reporterPackageBuildLogServer) Recv() (*PackageBuildLogEvent, error) {
	m := new(PackageBuildLogEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Reporter_PackageBuildFinished_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageBuildFinishedEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterServer).PackageBuildFinished(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotereporter.Reporter/PackageBuildFinished",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterServer).PackageBuildFinished(ctx, req.(*PackageBuildFinishedEvent))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reporter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remotereporter.Reporter",
	HandlerType: (*ReporterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildStarted",
			Handler:    _Reporter_BuildStarted_Handler,
		},
		{
			MethodName: "BuildFinished",
			Handler:    _Reporter_BuildFinished_Handler,
		},
		{
			MethodName: "PackageBuildStarted",
			Handler:    _Reporter_PackageBuildStarted_Handler,
		},
		{
			MethodName: "PackageBuildFinished",
			Handler:    _Reporter_PackageBuildFinished_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PackageBuildLog",
			Handler:       _Reporter_PackageBuildLog_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "reporter.proto",
}
